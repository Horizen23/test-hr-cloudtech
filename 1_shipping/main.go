package main

import "fmt"

// ฟังก์ชันเพื่อคำนวณเลขฟิโบนัชชีที่ตำแหน่ง n
func fibonacci(n int) int {
    // ตรวจสอบกรณีที่ n เป็นค่าลบ
    if n < 0 {
        return -1 // คืนค่า -1 สำหรับข้อมูลที่ไม่ถูกต้อง
    }
    
    // กรณีที่ n เป็น 0 หรือ 1
    if n == 0 {
        return 0 // คืนค่า 0 สำหรับเลขฟิโบนัชชีที่ตำแหน่ง 0
    }
    if n == 1 {
        return 1 // คืนค่า 1 สำหรับเลขฟิโบนัชชีที่ตำแหน่ง 1
    }

    seq := []int{0, 1} // กำหนดค่าเริ่มต้นของลำดับฟิโบนัชชีเป็น [0, 1]
    
    // สร้างลำดับฟิโบนัชชีจนถึงตำแหน่งที่ n
    for i := 2; i <= n; i++ {
        // เพิ่มเลขฟิโบนัชชีที่ตำแหน่ง i ลงในลำดับ
        seq = append(seq, seq[i-1] + seq[i-2])
    }

    // คืนค่าเลขฟิโบนัชชีที่ตำแหน่ง n
    return seq[n]
}

func main() {
    result := fibonacci(2) // คำนวณเลขฟิโบนัชชีที่ตำแหน่ง 2
    fmt.Printf("Fibonacci(2) = %d\n", result) // แสดงผลลัพธ์: Fibonacci(2) = 1
}